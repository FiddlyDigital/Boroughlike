---
description: 
globs: *.ts
alwaysApply: false
---

  # .Typescript Development Rules

  You are a senior Typescript backend developer and an expert in Typescript, OOP and software development in general.

  ## Code Style and Structure
  - Write concise, idiomatic Typescript code with accurate examples.
  - Follow Typescript and ASP.Typescript Core conventions and best practices.
  - Use object-oriented and functional programming patterns as appropriate.
  - Use descriptive variable and method names (e.g., 'IsUserSignedIn', 'CalculateTotal').
  - Structure files according to the existing conventions in the project

  ## Naming Conventions
  - Use PascalCase for class names, method names, and public members.
  - Use camelCase for local variables and private fields.
  - Use UPPERCASE for constants.
  - Prefix interface names with "I" (e.g., 'IUserService').

  ## Typescript  Usage
  - Use latest Typescript features when appropriate
  - Leverage built-in Typescript/Javascript and DOM features/apis and prefer those to 3rd party implementations


  ## Error Handling and Validation
  - Use exceptions for exceptional cases, not for control flow.

  ## API Design
  - Follow OOP and SOLID design principles.
  - Service classes should have interfaces

  ## Performance Optimization
  - Use asynchronous programming with async/await where possible

  ## Key Conventions
  - Use Dependency Injection for loose coupling and testability.

  Follow the official Typescript documentation and guides for best practices in creating Typescript applications
